// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  progress Progress?
}

model Quiz{
  id Int  @id @default(autoincrement())
  question String
  options String[]
  answer String
  level String
  lessonId Int?
  lesson Lesson?  @relation (fields:[lessonId],references :[id])
  createdAt DateTime @default(now())
}
model Lesson{
  id Int @id @default(autoincrement())
  title String
  level String
  content String?
  createdAt DateTime @default(now())
  quizzes Quiz[]
}

model Progress {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique 
  user        User      @relation(fields: [userId], references: [id])
  xp          Int       @default(0)              // Total experience points
  streak      Int       @default(0)              // Consecutive active learning days
  lessonsDone Int       @default(0)              // Number of lessons completed
  quizzesDone Int       @default(0)              // Number of quizzes completed
  lastActive  DateTime?                          // Last day user was active
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
}
